load("/Users/marenrieker/Documents/GitHub/TM-mother-father/final_data.RData")
#load packages
library(tidyverse)
library(stm)
library(quanteda)
library(quanteda.textstats)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
#add period
final_data <- final_data %>%
mutate(Period=
ifelse (Year <2005, 1,
ifelse (Year <2010, 2,
ifelse (Year <2015, 3, 4))))
#add column for mother and father
final_data<- final_data %>%
mutate(Headline=tolower(Headline)) %>%
mutate(Mother= str_detect(final_data$Headline, "mother"))
#keep only metadata and texts
data<- final_data %>%
select("Year", "Text", "Newspaper", "Mother")
#remove mother
#data<- data %>%
mutate(Mother= Text=gsub("mother", " ", data$Text))
#remove mother
#data<- data %>%
mutate(Mother=Text=gsub("mother", " ", data$Text))
#remove mother
#data<- data %>%
mutate(Mother = Text = gsub("mother", " ", data$Text))
#remove mother
data<- data %>%
mutate(Mother = Text = gsub("mother", " ", data$Text))
?gsub
data<- data %>%
mutate(Text=tolower(Text)) %>%
rowwise() %>%
mutate(Text1=
ifelse(Mother=="TRUE",
gsub("mother", "", Text),
gsub("father", "", Text)))
data
View(data)
#create document feature matrix for mother and father separately
m<- data %>%
filter(Mother=="TRUE")
f<- data %>%
filter(Mother=="FALSE")
dfm_prep<- function(x) {
x$Text1%>%
tokens(remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens(remove_punc=TRUE) %>%
tokens_remove(stopwords("English")) %>%
tokens_remove(c("said", "like", "just", "can", "go", "one", "say", "also", "want", "told", "get", "say ", "two", "make")) #frequent non interesting words
}
dfmm<- dfm_prep(m) %>%
tokens_wordstem(language = quanteda_options("language_stemmer")) %>%
tokens_remove(c("s")) %>%
dfm() %>%
dfm_trim(min_termfreq = 5)
dfmf<- dfm_prep(f) %>%
tokens_wordstem(language = quanteda_options("language_stemmer")) %>%
tokens_remove(c("s")) %>%
dfm() %>%
dfm_trim(min_termfreq = 5)
#no
freq<- function(x){
a<- x %>% textstat_frequency() %>% head(20)
a$feature<- factor(a$feature, levels=a$feature)
ggplot(a, aes(x=frequency, y=feature, fill=docfreq)) +
geom_col() #+ ggtitle("Most frequent words around the word Mother")
a
ggsave("plot.png", a,  width=2, height=2)
}
#plot for mother
freq<- dfmm %>% textstat_frequency() %>% head(20)
freq$feature<- factor(freq$feature, levels=freq$feature)
a<- ggplot(freq, aes(x=frequency, y=feature, fill=docfreq)) +
geom_col() + ggtitle("Most frequent words around the word Mother")
a
ggsave("dfmm.png", a,  width=2, height=2)
freq<- dfmf %>% textstat_frequency() %>% head(20)
freq$feature<- factor(freq$feature, levels=freq$feature)
a<- ggplot(freq, aes(x=frequency, y=feature, fill=docfreq)) +
geom_col() + ggtitle("Most frequent words around the word Father")
a
ggsave("dfmf.png", a,  width=2, height=2)
set.seed(1234) # for reproducibility
wordcloud(words = dfmm$feature, freq = dfmm$frequency, min.freq = 1, max.words=20, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"))
which(is.na(data$Year))
data<- na.omit(data)
which(is.na(data$Year))
processed <- textProcessor(data$Text1, metadata = data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
PrevFit <- stm(documents = out$documents, vocab = out$vocab,
K = 20, prevalence =~ Mother  + Newspaper + Year ,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
#print docs strongly associated with a topic
#don't know if we need it
thoughts17 <- findThoughts(PrevFit, texts = data$Text,  n = 2, topics = 17)$docs[[1]]ù
#print docs strongly associated with a topic
#don't know if we need it
thoughts17 <- findThoughts(PrevFit, texts = data$Text,  n = 2, topics = 17)$docs[[1]]#ù
thoughts17
par(mfrow = c(1, 2),mar = c(.5, .5, 1, .5))
plotQuote(thoughts17, width = 50, main = "Topic 17")
#lol article is too long. if we want to show this, we need shorter texts
out$meta$Mother <- as.factor(out$meta$Mother)
prep <- estimateEffect(1:20 ~ Mother + Newspaper + Year, PrevFit,
meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
plot(PrevFit, type = "summary", xlim = c(0, .3))
#do models with other number of topics
TenFit <- stm(documents = out$documents, vocab = out$vocab,
K = 10, prevalence =~ Mother  + Newspaper + Year ,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
labelTopics(TenFit)
topics<-labelTopics(TenFit, c(1:10))
labelTopics(TenFit)
out$meta$Mother <- as.factor(out$meta$Mother)
prep <- estimateEffect(1:20 ~ Mother + Newspaper + Year, TenFit,
meta = out$meta, uncertainty = "Global")
prep <- estimateEffect(1:10 ~ Mother + Newspaper + Year, TenFit,
meta = out$meta, uncertainty = "Global")
out$meta$Mother <- as.factor(out$meta$Mother)
prep <- estimateEffect(1:10 ~ Mother + Newspaper + Year, TenFit,
meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
plot(TenFit, type = "summary", xlim = c(0, .3))
#K = 15
FifFit <- stm(documents = out$documents, vocab = out$vocab,
K = 15, prevalence =~ Mother  + Newspaper + Year ,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
labelTopics(FifFit)
topics<-labelTopics(FifFit, c(1:15))
out$meta$Mother <- as.factor(out$meta$Mother)
prep <- estimateEffect(1:15 ~ Mother + Newspaper + Year, FifFit,
meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
plot(FifFit, type = "summary", xlim = c(0, .3))
summary(prep, topics=1)
out$meta$Mother <- as.factor(out$meta$Mother)
prep <- estimateEffect(1:15 ~ Mother + Newspaper + Year, FifFit,
meta = out$meta, uncertainty = "Global")
prep <- estimateEffect(1:15 ~ Mother + Newspaper + Year, FifFit,
meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
labelTopics(FifFit)
#K = 15
FifFit <- stm(documents = out$documents, vocab = out$vocab,
K = 15, content =~ Mother  + Newspaper + Year ,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
#K = 15
FifFit <- stm(documents = out$documents, vocab = out$vocab,
K = 15, content =~ Mother ,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
#K = 15, tried to run with content covariate but it takes too lomg- francis laptop needs to try if we feel the need
FifFit <- stm(documents = out$documents, vocab = out$vocab,
K = 15, content =~ Mother ,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
#K = 15, tried to run with content covariate but it takes too lomg- francis laptop needs to try if we feel the need
FifFit <- stm(documents = out$documents, vocab = out$vocab,
K = 15, prevalence =~ Mother + Year + Newspaper,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
#K = 30
ThiFit <- stm(documents = out$documents, vocab = out$vocab,
K = 30, prevalence =~ Mother  + Newspaper + Year ,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
labelTopics(ThiFit)
#create document feature matrix for mother and father separately
m<- data %>%
filter(Mother=="TRUE")
f<- data %>%
filter(Mother=="FALSE")
dfm_prep<- function(x) {
x$Text1%>%
tokens(remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_tolower() %>%
tokens(remove_punc=TRUE) %>%
tokens_remove(stopwords("English")) %>%
tokens_remove(c("said", "like", "just", "can", "go", "one", "say", "also", "want", "told", "get", "say ", "two", "make")) #frequent non interesting words
}
#dfm<- dfm_prep(data)
dfmm<- dfm_prep(m) %>%
tokens_wordstem(language = quanteda_options("language_stemmer")) %>%
tokens_remove(c("s")) %>%
dfm() %>%
dfm_trim(min_termfreq = 5)
dfmf<- dfm_prep(f) %>%
tokens_wordstem(language = quanteda_options("language_stemmer")) %>%
tokens_remove(c("s")) %>%
dfm() %>%
dfm_trim(min_termfreq = 5)
#no
freq<- function(x){
a<- x %>% textstat_frequency() %>% head(20)
a$feature<- factor(a$feature, levels=a$feature)
ggplot(a, aes(x=frequency, y=feature, fill=docfreq)) +
geom_col() #+ ggtitle("Most frequent words around the word Mother")
a
ggsave("plot.png", a,  width=2, height=2)
}
#freq(dfmf)
#plot for mother
freq<- dfmm %>% textstat_frequency() %>% head(20)
freq$feature<- factor(freq$feature, levels=freq$feature)
a<- ggplot(freq, aes(x=frequency, y=feature, fill=docfreq)) +
geom_col() + ggtitle("Most frequent words around the word Mother")
a
ggsave("dfmm.png", a,  width=2, height=2)
#plot for father
freq<- dfmf %>% textstat_frequency() %>% head(20)
freq$feature<- factor(freq$feature, levels=freq$feature)
a<- ggplot(freq, aes(x=frequency, y=feature, fill=docfreq)) +
geom_col() + ggtitle("Most frequent words around the word Father")
a
ggsave("dfmf.png", a,  width=2, height=2)
#cloudmapper mother - does not work!!
set.seed(1234) # for reproducibility
wordcloud(words = dfmm$feature, freq = dfmm$frequency, min.freq = 1, max.words=20, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"))
processed <- textProcessor(data$Text1, metadata = data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
?future_map
??future_map
library(furrr)
many_models <- data_frame(K = c(10, 15, 20, 30, 40)) %>%
mutate(topic_model = future_map(K, ~stm(documents = out$documents,
vocab = out$vocab,
K = .,
prevalence =~ Mother + Newspaper + Year ,
max.em.its = 75,
data = out$meta,
init.type = "Spectral")))
many_models <- tibble(K = c(10, 15, 20, 30, 40)) %>%
mutate(topic_model = future_map(K, ~stm(documents = out$documents,
vocab = out$vocab,
K = .,
prevalence =~ Mother + Newspaper + Year ,
max.em.its = 75,
data = out$meta,
init.type = "Spectral")))
library(furrr)
many_models <- tibble(K = c(10, 15, 20, 30, 40)) %>%
mutate(topic_model = future_map(K, ~stm(documents = out$documents,
vocab = out$vocab,
K = .,
prevalence =~ Mother + Newspaper + s(Year) ,
max.em.its = 75,
data = out$meta,
init.type = "Spectral")))
terms(ThiFit, 30)
prep <- estimateEffect(1:15 ~ Mother + Newspaper + Year, FifFit,
meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
plot(FifFit, type = "summary", xlim = c(0, .3))
?calcfrex
?calcscore
?calclift
#K = 50
FiftFit <- stm(documents = out$documents, vocab = out$vocab,
K = 50, prevalence =~ Mother  + Newspaper + Year ,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
labelTopics(FiftFit)
